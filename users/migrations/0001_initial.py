# -*- coding: utf-8 -*-
# Generated by Django 1.9.10 on 2016-10-03 03:08
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('channels', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expire_at', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='ChatUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_activity', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_channel', to='channels.Channel')),
            ],
            options={
                'ordering': ('username',),
                'verbose_name': 'user',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('active', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='ChatUserRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channel', to='channels.Channel')),
            ],
            options={
                'verbose_name': 'user role',
                'verbose_name_plural': 'Users roles',
            },
        ),
        migrations.CreateModel(
            name='UserBan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expiry_at', models.DateField(blank=True, null=True)),
                ('is_permanent', models.BooleanField(default=False, verbose_name='Permanent ban')),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_user', to='users.ChatUser')),
            ],
            options={
                'verbose_name': 'ban',
                'verbose_name_plural': 'Bans',
            },
            managers=[
                ('active', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='chatsession',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_user', to='users.ChatUser'),
        ),
        migrations.AlterUniqueTogether(
            name='userban',
            unique_together=set([('is_permanent', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='chatuserrole',
            unique_together=set([('title', 'channel')]),
        ),
        migrations.AlterUniqueTogether(
            name='chatuser',
            unique_together=set([('username', 'channel')]),
        ),
    ]
